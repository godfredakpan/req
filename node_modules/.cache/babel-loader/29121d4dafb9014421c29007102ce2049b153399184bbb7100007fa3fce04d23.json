{"ast":null,"code":"const personAdj = '(misty|rusty|dusty|rich|randy|sandy|young|earnest|frank|brown)';\nexport default [\n// ===person-date===\n{\n  match: '%Person|Date% #Acronym? #ProperNoun',\n  tag: 'Person',\n  reason: 'jan-thierson'\n},\n// ===person-noun===\n//Cliff Clavin\n{\n  match: '%Person|Noun% #Acronym? #ProperNoun',\n  tag: 'Person',\n  reason: 'switch-person',\n  safe: true\n},\n// olive garden\n{\n  match: '%Person|Noun% #Organization',\n  tag: 'Organization',\n  reason: 'olive-garden'\n},\n// ===person-verb===\n// ollie faroo\n{\n  match: '%Person|Verb% #Acronym? #ProperNoun',\n  tag: 'Person',\n  reason: 'verb-propernoun'\n},\n// chuck will ...\n{\n  match: `[%Person|Verb%] (will|had|has|said|says|told|did|learned|wants|wanted)`,\n  group: 0,\n  tag: 'Person',\n  reason: 'person-said'\n},\n// ===person-place===\n//sydney harbour\n{\n  match: `[%Person|Place%] (harbor|harbour|pier|town|city|place|dump|landfill)`,\n  group: 0,\n  tag: 'Place',\n  reason: 'sydney-harbour'\n},\n// east sydney\n{\n  match: `(west|east|north|south) [%Person|Place%]`,\n  group: 0,\n  tag: 'Place',\n  reason: 'east-sydney'\n},\n// ===person-adjective===\n// rusty smith\n{\n  match: `${personAdj} #Person`,\n  tag: 'Person',\n  reason: 'randy-smith'\n},\n// rusty a. smith\n{\n  match: `${personAdj} #Acronym? #ProperNoun`,\n  tag: 'Person',\n  reason: 'rusty-smith'\n},\n// very rusty\n{\n  match: `#Adverb [${personAdj}]`,\n  group: 0,\n  tag: 'Adjective',\n  reason: 'really-rich'\n},\n// ===person-verb===\n// would wade\n{\n  match: `#Modal [%Person|Verb%]`,\n  group: 0,\n  tag: 'Verb',\n  reason: 'would-mark'\n},\n// really wade\n{\n  match: `#Adverb [%Person|Verb%]`,\n  group: 0,\n  tag: 'Verb',\n  reason: 'really-mark'\n},\n// drew closer\n{\n  match: `[%Person|Verb%] (#Adverb|#Comparative)`,\n  group: 0,\n  tag: 'Verb',\n  reason: 'drew-closer'\n},\n// wade smith\n{\n  match: `%Person|Verb% #Person`,\n  tag: 'Person',\n  reason: 'rob-smith'\n},\n// wade m. Cooper\n{\n  match: `%Person|Verb% #Acronym #ProperNoun`,\n  tag: 'Person',\n  reason: 'rob-a-smith'\n},\n// will go\n{\n  match: '[will] #Verb',\n  group: 0,\n  tag: 'Modal',\n  reason: 'will-verb'\n},\n// will Pharell\n{\n  match: '(will && @isTitleCase) #ProperNoun',\n  tag: 'Person',\n  reason: 'will-name'\n}];","map":{"version":3,"names":["personAdj","match","tag","reason","safe","group"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/compromise/src/2-two/postTagger/model/person/ambig-name.js"],"sourcesContent":["const personAdj = '(misty|rusty|dusty|rich|randy|sandy|young|earnest|frank|brown)'\n\nexport default [\n  // ===person-date===\n  { match: '%Person|Date% #Acronym? #ProperNoun', tag: 'Person', reason: 'jan-thierson' },\n  // ===person-noun===\n  //Cliff Clavin\n  { match: '%Person|Noun% #Acronym? #ProperNoun', tag: 'Person', reason: 'switch-person', safe: true },\n  // olive garden\n  { match: '%Person|Noun% #Organization', tag: 'Organization', reason: 'olive-garden' },\n  // ===person-verb===\n  // ollie faroo\n  { match: '%Person|Verb% #Acronym? #ProperNoun', tag: 'Person', reason: 'verb-propernoun' },\n  // chuck will ...\n  { match: `[%Person|Verb%] (will|had|has|said|says|told|did|learned|wants|wanted)`, group: 0, tag: 'Person', reason: 'person-said' },\n\n  // ===person-place===\n  //sydney harbour\n  { match: `[%Person|Place%] (harbor|harbour|pier|town|city|place|dump|landfill)`, group: 0, tag: 'Place', reason: 'sydney-harbour' },\n  // east sydney\n  { match: `(west|east|north|south) [%Person|Place%]`, group: 0, tag: 'Place', reason: 'east-sydney' },\n\n  // ===person-adjective===\n  // rusty smith\n  { match: `${personAdj} #Person`, tag: 'Person', reason: 'randy-smith' },\n  // rusty a. smith\n  { match: `${personAdj} #Acronym? #ProperNoun`, tag: 'Person', reason: 'rusty-smith' },\n  // very rusty\n  { match: `#Adverb [${personAdj}]`, group: 0, tag: 'Adjective', reason: 'really-rich' },\n\n  // ===person-verb===\n  // would wade\n  { match: `#Modal [%Person|Verb%]`, group: 0, tag: 'Verb', reason: 'would-mark' },\n  // really wade\n  { match: `#Adverb [%Person|Verb%]`, group: 0, tag: 'Verb', reason: 'really-mark' },\n  // drew closer\n  { match: `[%Person|Verb%] (#Adverb|#Comparative)`, group: 0, tag: 'Verb', reason: 'drew-closer' },\n  // wade smith\n  { match: `%Person|Verb% #Person`, tag: 'Person', reason: 'rob-smith' },\n  // wade m. Cooper\n  { match: `%Person|Verb% #Acronym #ProperNoun`, tag: 'Person', reason: 'rob-a-smith' },\n  // will go\n  { match: '[will] #Verb', group: 0, tag: 'Modal', reason: 'will-verb' },\n  // will Pharell\n  { match: '(will && @isTitleCase) #ProperNoun', tag: 'Person', reason: 'will-name' },\n]\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,gEAAgE;AAElF,eAAe;AACb;AACA;EAAEC,KAAK,EAAE,qCAAqC;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAe,CAAC;AACvF;AACA;AACA;EAAEF,KAAK,EAAE,qCAAqC;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAK,CAAC;AACpG;AACA;EAAEH,KAAK,EAAE,6BAA6B;EAAEC,GAAG,EAAE,cAAc;EAAEC,MAAM,EAAE;AAAe,CAAC;AACrF;AACA;AACA;EAAEF,KAAK,EAAE,qCAAqC;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAkB,CAAC;AAC1F;AACA;EAAEF,KAAK,EAAG,wEAAuE;EAAEI,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAc,CAAC;AAEnI;AACA;AACA;EAAEF,KAAK,EAAG,sEAAqE;EAAEI,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAiB,CAAC;AACnI;AACA;EAAEF,KAAK,EAAG,0CAAyC;EAAEI,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAc,CAAC;AAEpG;AACA;AACA;EAAEF,KAAK,EAAG,GAAED,SAAU,UAAS;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAc,CAAC;AACvE;AACA;EAAEF,KAAK,EAAG,GAAED,SAAU,wBAAuB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAc,CAAC;AACrF;AACA;EAAEF,KAAK,EAAG,YAAWD,SAAU,GAAE;EAAEK,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,WAAW;EAAEC,MAAM,EAAE;AAAc,CAAC;AAEtF;AACA;AACA;EAAEF,KAAK,EAAG,wBAAuB;EAAEI,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAa,CAAC;AAChF;AACA;EAAEF,KAAK,EAAG,yBAAwB;EAAEI,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAc,CAAC;AAClF;AACA;EAAEF,KAAK,EAAG,wCAAuC;EAAEI,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAc,CAAC;AACjG;AACA;EAAEF,KAAK,EAAG,uBAAsB;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAY,CAAC;AACtE;AACA;EAAEF,KAAK,EAAG,oCAAmC;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAc,CAAC;AACrF;AACA;EAAEF,KAAK,EAAE,cAAc;EAAEI,KAAK,EAAE,CAAC;EAAEH,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAY,CAAC;AACtE;AACA;EAAEF,KAAK,EAAE,oCAAoC;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAY,CAAC,CACpF"},"metadata":{},"sourceType":"module","externalDependencies":[]}