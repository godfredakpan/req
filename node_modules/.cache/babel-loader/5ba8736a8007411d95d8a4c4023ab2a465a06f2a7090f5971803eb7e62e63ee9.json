{"ast":null,"code":"// approximate file-size of given text\nconst fileSize = txt => {\n  if (!txt) {\n    return '0kb';\n  }\n  if (typeof txt === 'object') {\n    txt = JSON.stringify(txt);\n  }\n  let unit = 'kb';\n  let num = Buffer.byteLength(txt, 'utf8');\n  num = num / 1000;\n  if (num > 1000) {\n    unit = 'mb';\n    num = num / 1000;\n  }\n  num = Math.round(num * 10) / 10; //round it\n  return num.toLocaleString() + unit;\n};\nexport default fileSize;","map":{"version":3,"names":["fileSize","txt","JSON","stringify","unit","num","Buffer","byteLength","Math","round","toLocaleString"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/suffix-thumb/src/test/filesize.js"],"sourcesContent":["\n// approximate file-size of given text\nconst fileSize = (txt) => {\n  if (!txt) {\n    return '0kb'\n  }\n  if (typeof txt === 'object') {\n    txt = JSON.stringify(txt)\n  }\n  let unit = 'kb'\n  let num = Buffer.byteLength(txt, 'utf8')\n  num = num / 1000\n  if (num > 1000) {\n    unit = 'mb'\n    num = num / 1000\n  }\n  num = Math.round(num * 10) / 10//round it\n  return num.toLocaleString() + unit\n}\n\nexport default fileSize"],"mappings":"AACA;AACA,MAAMA,QAAQ,GAAIC,GAAG,IAAK;EACxB,IAAI,CAACA,GAAG,EAAE;IACR,OAAO,KAAK;EACd;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3BA,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACF,GAAG,CAAC;EAC3B;EACA,IAAIG,IAAI,GAAG,IAAI;EACf,IAAIC,GAAG,GAAGC,MAAM,CAACC,UAAU,CAACN,GAAG,EAAE,MAAM,CAAC;EACxCI,GAAG,GAAGA,GAAG,GAAG,IAAI;EAChB,IAAIA,GAAG,GAAG,IAAI,EAAE;IACdD,IAAI,GAAG,IAAI;IACXC,GAAG,GAAGA,GAAG,GAAG,IAAI;EAClB;EACAA,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE;EAC/B,OAAOA,GAAG,CAACK,cAAc,EAAE,GAAGN,IAAI;AACpC,CAAC;AAED,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}