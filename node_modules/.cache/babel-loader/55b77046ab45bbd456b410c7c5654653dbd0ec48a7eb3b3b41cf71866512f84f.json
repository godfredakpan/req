{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = useOverlayOffset;\nvar _react = require(\"react\");\nvar _hasClass = _interopRequireDefault(require(\"dom-helpers/hasClass\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _Popover = _interopRequireDefault(require(\"./Popover\"));\n// This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\nfunction useOverlayOffset(customOffset) {\n  const overlayRef = (0, _react.useRef)(null);\n  const popoverClass = (0, _ThemeProvider.useBootstrapPrefix)(undefined, 'popover');\n  const offset = (0, _react.useMemo)(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && (0, _hasClass.default)(overlayRef.current, popoverClass)) {\n          return customOffset || _Popover.default.POPPER_OFFSET;\n        }\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","default","useOverlayOffset","_react","_hasClass","_ThemeProvider","_Popover","customOffset","overlayRef","useRef","popoverClass","useBootstrapPrefix","undefined","offset","useMemo","name","options","current","POPPER_OFFSET","module"],"sources":["/Users/godfredakpan/Documents/projects/AgentReg/node_modules/react-bootstrap/cjs/useOverlayOffset.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = useOverlayOffset;\nvar _react = require(\"react\");\nvar _hasClass = _interopRequireDefault(require(\"dom-helpers/hasClass\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _Popover = _interopRequireDefault(require(\"./Popover\"));\n// This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\nfunction useOverlayOffset(customOffset) {\n  const overlayRef = (0, _react.useRef)(null);\n  const popoverClass = (0, _ThemeProvider.useBootstrapPrefix)(undefined, 'popover');\n  const offset = (0, _react.useMemo)(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && (0, _hasClass.default)(overlayRef.current, popoverClass)) {\n          return customOffset || _Popover.default.POPPER_OFFSET;\n        }\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AACpFC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,gBAAgB;AAClC,IAAIC,MAAM,GAAGL,OAAO,CAAC,OAAO,CAAC;AAC7B,IAAIM,SAAS,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACvE,IAAIO,cAAc,GAAGP,OAAO,CAAC,iBAAiB,CAAC;AAC/C,IAAIQ,QAAQ,GAAGT,sBAAsB,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC3D;AACA;AACA,SAASI,gBAAgB,CAACK,YAAY,EAAE;EACtC,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAEL,MAAM,CAACM,MAAM,EAAE,IAAI,CAAC;EAC3C,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAEL,cAAc,CAACM,kBAAkB,EAAEC,SAAS,EAAE,SAAS,CAAC;EACjF,MAAMC,MAAM,GAAG,CAAC,CAAC,EAAEV,MAAM,CAACW,OAAO,EAAE,OAAO;IACxCC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE;MACPH,MAAM,EAAE,MAAM;QACZ,IAAIL,UAAU,CAACS,OAAO,IAAI,CAAC,CAAC,EAAEb,SAAS,CAACH,OAAO,EAAEO,UAAU,CAACS,OAAO,EAAEP,YAAY,CAAC,EAAE;UAClF,OAAOH,YAAY,IAAID,QAAQ,CAACL,OAAO,CAACiB,aAAa;QACvD;QACA,OAAOX,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MAC/B;IACF;EACF,CAAC,CAAC,EAAE,CAACA,YAAY,EAAEG,YAAY,CAAC,CAAC;EACjC,OAAO,CAACF,UAAU,EAAE,CAACK,MAAM,CAAC,CAAC;AAC/B;AACAM,MAAM,CAACpB,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}