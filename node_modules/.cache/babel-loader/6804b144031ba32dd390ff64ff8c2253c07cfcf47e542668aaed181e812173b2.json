{"ast":null,"code":"const noDupes = function (rules) {\n  let already = new Set();\n  rules = rules.filter(r => {\n    if (already.has(r.from)) {\n      return false;\n    }\n    already.add(r.from);\n    return true;\n  });\n  return rules;\n};\nconst cleanup = function (rules) {\n  // only helpful ones\n  rules = rules.filter(r => r.yes > 0 && r.yes > r.no);\n  // one rule per suffix\n  rules = noDupes(rules);\n  return rules;\n};\nexport default cleanup;","map":{"version":3,"names":["noDupes","rules","already","Set","filter","r","has","from","add","cleanup","yes","no"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/suffix-thumb/src/learn/01-generate/clean.js"],"sourcesContent":["const noDupes = function (rules) {\n  let already = new Set()\n  rules = rules.filter(r => {\n    if (already.has(r.from)) {\n      return false\n    }\n    already.add(r.from)\n    return true\n  })\n  return rules\n}\n\nconst cleanup = function (rules) {\n  // only helpful ones\n  rules = rules.filter(r => r.yes > 0 && r.yes > r.no)\n  // one rule per suffix\n  rules = noDupes(rules)\n  return rules\n}\nexport default cleanup"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAUC,KAAK,EAAE;EAC/B,IAAIC,OAAO,GAAG,IAAIC,GAAG,EAAE;EACvBF,KAAK,GAAGA,KAAK,CAACG,MAAM,CAACC,CAAC,IAAI;IACxB,IAAIH,OAAO,CAACI,GAAG,CAACD,CAAC,CAACE,IAAI,CAAC,EAAE;MACvB,OAAO,KAAK;IACd;IACAL,OAAO,CAACM,GAAG,CAACH,CAAC,CAACE,IAAI,CAAC;IACnB,OAAO,IAAI;EACb,CAAC,CAAC;EACF,OAAON,KAAK;AACd,CAAC;AAED,MAAMQ,OAAO,GAAG,UAAUR,KAAK,EAAE;EAC/B;EACAA,KAAK,GAAGA,KAAK,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACK,GAAG,GAAG,CAAC,IAAIL,CAAC,CAACK,GAAG,GAAGL,CAAC,CAACM,EAAE,CAAC;EACpD;EACAV,KAAK,GAAGD,OAAO,CAACC,KAAK,CAAC;EACtB,OAAOA,KAAK;AACd,CAAC;AACD,eAAeQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}