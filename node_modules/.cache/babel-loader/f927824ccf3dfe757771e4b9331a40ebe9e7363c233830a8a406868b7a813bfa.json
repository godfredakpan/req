{"ast":null,"code":"'use strict';\n\nvar query = require('./query');\nvar objectAssign = require('object-assign');\n\n/**\n * A FaunaDB Lambda expression to be passed into one of the collection\n * functions: Map or Filter.\n *\n * @callback PageHelper~collectionFunction\n * @param {any} var\n *   The variable passed in by FaunaDB when this Lambda\n *   function is executed.\n * @return {Expr}\n *   The FaunaDB query expression to be returned by this Lambda.\n */\n\n/**\n * @callback PageHelper~eachFunction\n * @param {Object} page\n *   A page returned by FaunaDB's Paginate function.\n */\n\n/**\n * A wrapper that provides a helpful API for consuming FaunaDB pages.\n *\n * Generally this is constructed through the {@link Client#paginate} method.\n *\n * The {@link PageHelper#map} and {@link PageHelper#filter} methods will wrap the underlying query with a Map\n * and Filter query function, respectively. These will be executed on the server when a promise-returning function\n * is called.\n *\n * The {@link PageHelper#each} and {@link PageHelper#eachReverse} functions dispatch queries to FaunaDB, and return Promises\n * representing the completion of those queries. The callbacks provided to these functions are executed locally when the\n * queries return.\n *\n * The {@link PageHelper#nextPage} and {@link PageHelper#previousPage} functions also dispatch queries to FaunaDB,\n * but return their responses in a wrapped Promise.\n *\n * @param {Client} client\n *   The FaunaDB client used to paginate.\n * @param {Object} set\n *   The set to paginate.\n * @param {?Object} params\n *   Parameters to be passed to the FaunaDB Paginate function.\n * @param {?Object} options\n *   Object that configures the current pagination, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @constructor\n */\nfunction PageHelper(client, set, params, options) {\n  if (params === undefined) {\n    params = {};\n  }\n  if (options === undefined) {\n    options = {};\n  }\n  this.reverse = false;\n  this.params = {};\n  this.before = undefined;\n  this.after = undefined;\n  objectAssign(this.params, params);\n  var cursorParams = this.params.cursor || this.params;\n  if ('before' in cursorParams) {\n    this.before = cursorParams.before;\n    delete cursorParams.before;\n  } else if ('after' in cursorParams) {\n    this.after = cursorParams.after;\n    delete cursorParams.after;\n  }\n  this.options = {};\n  objectAssign(this.options, options);\n  this.client = client;\n  this.set = set;\n\n  /**\n   * @member {Array.<Function>}\n   * @type {Array.<Function>}\n   * @private\n   */\n  this._faunaFunctions = [];\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Map function.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The Lambda expression to be passed into the Map function.\n * @return {PageHelper}\n *\n */\nPageHelper.prototype.map = function (lambda) {\n  var rv = this._clone();\n  rv._faunaFunctions.push(function (q) {\n    return query.Map(q, lambda);\n  });\n  return rv;\n};\n\n/**\n * Wraps the set to be paginated with a FaunaDB Filter funciton.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The lambda expression to be passed into the Filter function.\n * @return {PageHelper}\n */\nPageHelper.prototype.filter = function (lambda) {\n  var rv = this._clone();\n  rv._faunaFunctions.push(function (q) {\n    return query.Filter(q, lambda);\n  });\n  return rv;\n};\n\n/**\n * Executes the provided function for each page.\n *\n * @param {PageHelper~eachFunction} lambda\n *   A function to be executed for each page.\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.each = function (lambda) {\n  return this._retrieveNextPage(this.after, false).then(this._consumePages(lambda, false));\n};\n\n/**\n * Executes the provided function for each page, in the reverse direction.\n * @param {PageHelper~eachFunction} lambda\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.eachReverse = function (lambda) {\n  return this._retrieveNextPage(this.before, true).then(this._consumePages(lambda, true));\n};\n\n/**\n * Queries for the previous page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.previousPage = function () {\n  var self = this;\n  return this._retrieveNextPage(this.before, true).then(this._adjustCursors.bind(self));\n};\n\n/**\n * Queries for the next page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.nextPage = function () {\n  var self = this;\n  return this._retrieveNextPage(this.after, false).then(this._adjustCursors.bind(self));\n};\nPageHelper.prototype._adjustCursors = function (page) {\n  if (page.after !== undefined) {\n    this.after = page.after;\n  }\n  if (page.before !== undefined) {\n    this.before = page.before;\n  }\n  return page.data;\n};\nPageHelper.prototype._consumePages = function (lambda, reverse) {\n  var self = this;\n  return function (page) {\n    lambda(page.data);\n    var nextCursor;\n    if (reverse) {\n      nextCursor = page.before;\n    } else {\n      nextCursor = page.after;\n    }\n    if (nextCursor !== undefined) {\n      return self._retrieveNextPage(nextCursor, reverse).then(self._consumePages(lambda, reverse));\n    } else {\n      return Promise.resolve();\n    }\n  };\n};\n\n/**\n *\n * @returns {external:Promise.<Object>}\n * @private\n */\nPageHelper.prototype._retrieveNextPage = function (cursor, reverse) {\n  var opts = {};\n  objectAssign(opts, this.params);\n  var cursorOpts = opts.cursor || opts;\n  if (cursor !== undefined) {\n    if (reverse) {\n      cursorOpts.before = cursor;\n    } else {\n      cursorOpts.after = cursor;\n    }\n  } else {\n    if (reverse) {\n      cursorOpts.before = null;\n    }\n  }\n  var q = query.Paginate(this.set, opts);\n  if (this._faunaFunctions.length > 0) {\n    this._faunaFunctions.forEach(function (lambda) {\n      q = lambda(q);\n    });\n  }\n  return this.client.query(q, this.options);\n};\n\n/**\n * @private\n * @returns {PageHelper}\n */\nPageHelper.prototype._clone = function () {\n  return Object.create(PageHelper.prototype, {\n    client: {\n      value: this.client\n    },\n    set: {\n      value: this.set\n    },\n    _faunaFunctions: {\n      value: this._faunaFunctions\n    },\n    before: {\n      value: this.before\n    },\n    after: {\n      value: this.after\n    },\n    params: {\n      value: this.params\n    }\n  });\n};\nmodule.exports = PageHelper;","map":{"version":3,"names":["query","require","objectAssign","PageHelper","client","set","params","options","undefined","reverse","before","after","cursorParams","cursor","_faunaFunctions","prototype","map","lambda","rv","_clone","push","q","Map","filter","Filter","each","_retrieveNextPage","then","_consumePages","eachReverse","previousPage","self","_adjustCursors","bind","nextPage","page","data","nextCursor","Promise","resolve","opts","cursorOpts","Paginate","length","forEach","Object","create","value","module","exports"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/faunadb/src/PageHelper.js"],"sourcesContent":["'use strict'\n\nvar query = require('./query')\nvar objectAssign = require('object-assign')\n\n/**\n * A FaunaDB Lambda expression to be passed into one of the collection\n * functions: Map or Filter.\n *\n * @callback PageHelper~collectionFunction\n * @param {any} var\n *   The variable passed in by FaunaDB when this Lambda\n *   function is executed.\n * @return {Expr}\n *   The FaunaDB query expression to be returned by this Lambda.\n */\n\n/**\n * @callback PageHelper~eachFunction\n * @param {Object} page\n *   A page returned by FaunaDB's Paginate function.\n */\n\n/**\n * A wrapper that provides a helpful API for consuming FaunaDB pages.\n *\n * Generally this is constructed through the {@link Client#paginate} method.\n *\n * The {@link PageHelper#map} and {@link PageHelper#filter} methods will wrap the underlying query with a Map\n * and Filter query function, respectively. These will be executed on the server when a promise-returning function\n * is called.\n *\n * The {@link PageHelper#each} and {@link PageHelper#eachReverse} functions dispatch queries to FaunaDB, and return Promises\n * representing the completion of those queries. The callbacks provided to these functions are executed locally when the\n * queries return.\n *\n * The {@link PageHelper#nextPage} and {@link PageHelper#previousPage} functions also dispatch queries to FaunaDB,\n * but return their responses in a wrapped Promise.\n *\n * @param {Client} client\n *   The FaunaDB client used to paginate.\n * @param {Object} set\n *   The set to paginate.\n * @param {?Object} params\n *   Parameters to be passed to the FaunaDB Paginate function.\n * @param {?Object} options\n *   Object that configures the current pagination, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @constructor\n */\nfunction PageHelper(client, set, params, options) {\n  if (params === undefined) {\n    params = {}\n  }\n\n  if (options === undefined) {\n    options = {}\n  }\n\n  this.reverse = false\n  this.params = {}\n\n  this.before = undefined\n  this.after = undefined\n\n  objectAssign(this.params, params)\n\n  var cursorParams = this.params.cursor || this.params\n\n  if ('before' in cursorParams) {\n    this.before = cursorParams.before\n    delete cursorParams.before\n  } else if ('after' in cursorParams) {\n    this.after = cursorParams.after\n    delete cursorParams.after\n  }\n\n  this.options = {}\n  objectAssign(this.options, options)\n\n  this.client = client\n  this.set = set\n\n  /**\n   * @member {Array.<Function>}\n   * @type {Array.<Function>}\n   * @private\n   */\n  this._faunaFunctions = []\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Map function.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The Lambda expression to be passed into the Map function.\n * @return {PageHelper}\n *\n */\nPageHelper.prototype.map = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Map(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Filter funciton.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The lambda expression to be passed into the Filter function.\n * @return {PageHelper}\n */\nPageHelper.prototype.filter = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Filter(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Executes the provided function for each page.\n *\n * @param {PageHelper~eachFunction} lambda\n *   A function to be executed for each page.\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.each = function(lambda) {\n  return this._retrieveNextPage(this.after, false).then(\n    this._consumePages(lambda, false)\n  )\n}\n\n/**\n * Executes the provided function for each page, in the reverse direction.\n * @param {PageHelper~eachFunction} lambda\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.eachReverse = function(lambda) {\n  return this._retrieveNextPage(this.before, true).then(\n    this._consumePages(lambda, true)\n  )\n}\n\n/**\n * Queries for the previous page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.previousPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.before, true).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\n/**\n * Queries for the next page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.nextPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.after, false).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\nPageHelper.prototype._adjustCursors = function(page) {\n  if (page.after !== undefined) {\n    this.after = page.after\n  }\n\n  if (page.before !== undefined) {\n    this.before = page.before\n  }\n\n  return page.data\n}\n\nPageHelper.prototype._consumePages = function(lambda, reverse) {\n  var self = this\n  return function(page) {\n    lambda(page.data)\n\n    var nextCursor\n    if (reverse) {\n      nextCursor = page.before\n    } else {\n      nextCursor = page.after\n    }\n\n    if (nextCursor !== undefined) {\n      return self\n        ._retrieveNextPage(nextCursor, reverse)\n        .then(self._consumePages(lambda, reverse))\n    } else {\n      return Promise.resolve()\n    }\n  }\n}\n\n/**\n *\n * @returns {external:Promise.<Object>}\n * @private\n */\nPageHelper.prototype._retrieveNextPage = function(cursor, reverse) {\n  var opts = {}\n  objectAssign(opts, this.params)\n  var cursorOpts = opts.cursor || opts\n\n  if (cursor !== undefined) {\n    if (reverse) {\n      cursorOpts.before = cursor\n    } else {\n      cursorOpts.after = cursor\n    }\n  } else {\n    if (reverse) {\n      cursorOpts.before = null\n    }\n  }\n\n  var q = query.Paginate(this.set, opts)\n\n  if (this._faunaFunctions.length > 0) {\n    this._faunaFunctions.forEach(function(lambda) {\n      q = lambda(q)\n    })\n  }\n\n  return this.client.query(q, this.options)\n}\n\n/**\n * @private\n * @returns {PageHelper}\n */\nPageHelper.prototype._clone = function() {\n  return Object.create(PageHelper.prototype, {\n    client: { value: this.client },\n    set: { value: this.set },\n    _faunaFunctions: { value: this._faunaFunctions },\n    before: { value: this.before },\n    after: { value: this.after },\n    params: { value: this.params },\n  })\n}\n\nmodule.exports = PageHelper\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}