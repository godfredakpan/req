{"ast":null,"code":"'use strict';\n\n/**\n * A structure containing the request and response context for a given FaunaDB request.\n * Provided to an observer function optionally defined in the {@link Client} constructor.\n *\n * @param {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} method\n *   The HTTP method used in the request.\n * @param {string} path\n *   The path that was queried. Relative to the client's domain.\n * @param {string} query\n *   URL query parameters. Only set if `method` is \"GET\".\n * @param {Object} requestRaw\n *   The JSON request string.\n * @param {Object} requestContent\n *   The request data.\n * @param {string} responseRaw\n *   The unparsed response data, as a string.\n * @param {object | FaunaHttpErrorResponseContent} responseContent\n *   The response data parsed as JSON.\n * @param {number} statusCode\n *   The HTTP response status code.\n * @param {object} responseHeaders\n *   The HTTP headers returned in the response.\n * @param {number} startTime\n *   The time the request was issued by the client.\n * @param {number} endTime\n *   The time the response was received by the client.\n * @constructor\n */\nfunction RequestResult(method, path, query, requestRaw, requestContent, responseRaw, responseContent, statusCode, responseHeaders, startTime, endTime) {\n  /** @type {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} */\n  this.method = method;\n\n  /** @type {string} */\n  this.path = path;\n\n  /**\n   * URL query. Null unless `method == 'get'`.\n   * *Not* related to {@link Client.query}.\n   * @type {object}\n   */\n  this.query = query;\n\n  /** @type {string} */\n  this.requestRaw = requestRaw;\n\n  /** @type {object} */\n  this.requestContent = requestContent;\n\n  /** @type {string} */\n  this.responseRaw = responseRaw;\n\n  /**\n   * Parsed value returned by the server.\n   * Includes \"resource\" wrapper dict, or may be an FaunaHttpErrorResponseContent instead\n   * @type {object | FaunaHttpErrorResponseContent}\n   */\n  this.responseContent = responseContent;\n\n  /** @type {number} */\n  this.statusCode = statusCode;\n\n  /** @type {object} */\n  this.responseHeaders = responseHeaders;\n\n  /** @type {number} */\n  this.startTime = startTime;\n\n  /** @type {number} */\n  this.endTime = endTime;\n}\n\n/**\n * `this.endTime - this.startTime`: Time taken in milliseconds.\n * @type {number}\n */\nObject.defineProperty(RequestResult.prototype, 'timeTaken', {\n  get: function () {\n    return this.endTime - this.startTime;\n  }\n});\nmodule.exports = RequestResult;","map":{"version":3,"names":["RequestResult","method","path","query","requestRaw","requestContent","responseRaw","responseContent","statusCode","responseHeaders","startTime","endTime","Object","defineProperty","prototype","get","module","exports"],"sources":["/Users/godfredakpan/Documents/projects/AgentReg/node_modules/faunadb/src/RequestResult.js"],"sourcesContent":["'use strict'\n\n/**\n * A structure containing the request and response context for a given FaunaDB request.\n * Provided to an observer function optionally defined in the {@link Client} constructor.\n *\n * @param {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} method\n *   The HTTP method used in the request.\n * @param {string} path\n *   The path that was queried. Relative to the client's domain.\n * @param {string} query\n *   URL query parameters. Only set if `method` is \"GET\".\n * @param {Object} requestRaw\n *   The JSON request string.\n * @param {Object} requestContent\n *   The request data.\n * @param {string} responseRaw\n *   The unparsed response data, as a string.\n * @param {object | FaunaHttpErrorResponseContent} responseContent\n *   The response data parsed as JSON.\n * @param {number} statusCode\n *   The HTTP response status code.\n * @param {object} responseHeaders\n *   The HTTP headers returned in the response.\n * @param {number} startTime\n *   The time the request was issued by the client.\n * @param {number} endTime\n *   The time the response was received by the client.\n * @constructor\n */\nfunction RequestResult(\n  method,\n  path,\n  query,\n  requestRaw,\n  requestContent,\n  responseRaw,\n  responseContent,\n  statusCode,\n  responseHeaders,\n  startTime,\n  endTime\n) {\n  /** @type {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} */\n  this.method = method\n\n  /** @type {string} */\n  this.path = path\n\n  /**\n   * URL query. Null unless `method == 'get'`.\n   * *Not* related to {@link Client.query}.\n   * @type {object}\n   */\n  this.query = query\n\n  /** @type {string} */\n  this.requestRaw = requestRaw\n\n  /** @type {object} */\n  this.requestContent = requestContent\n\n  /** @type {string} */\n  this.responseRaw = responseRaw\n\n  /**\n   * Parsed value returned by the server.\n   * Includes \"resource\" wrapper dict, or may be an FaunaHttpErrorResponseContent instead\n   * @type {object | FaunaHttpErrorResponseContent}\n   */\n  this.responseContent = responseContent\n\n  /** @type {number} */\n  this.statusCode = statusCode\n\n  /** @type {object} */\n  this.responseHeaders = responseHeaders\n\n  /** @type {number} */\n  this.startTime = startTime\n\n  /** @type {number} */\n  this.endTime = endTime\n}\n\n/**\n * `this.endTime - this.startTime`: Time taken in milliseconds.\n * @type {number}\n */\nObject.defineProperty(RequestResult.prototype, 'timeTaken', {\n  get: function() {\n    return this.endTime - this.startTime\n  },\n})\n\nmodule.exports = RequestResult\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,CACpBC,MAAM,EACNC,IAAI,EACJC,KAAK,EACLC,UAAU,EACVC,cAAc,EACdC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,eAAe,EACfC,SAAS,EACTC,OAAO,EACP;EACA;EACA,IAAI,CAACV,MAAM,GAAGA,MAAM;;EAEpB;EACA,IAAI,CAACC,IAAI,GAAGA,IAAI;;EAEhB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,KAAK,GAAGA,KAAK;;EAElB;EACA,IAAI,CAACC,UAAU,GAAGA,UAAU;;EAE5B;EACA,IAAI,CAACC,cAAc,GAAGA,cAAc;;EAEpC;EACA,IAAI,CAACC,WAAW,GAAGA,WAAW;;EAE9B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,eAAe,GAAGA,eAAe;;EAEtC;EACA,IAAI,CAACC,UAAU,GAAGA,UAAU;;EAE5B;EACA,IAAI,CAACC,eAAe,GAAGA,eAAe;;EAEtC;EACA,IAAI,CAACC,SAAS,GAAGA,SAAS;;EAE1B;EACA,IAAI,CAACC,OAAO,GAAGA,OAAO;AACxB;;AAEA;AACA;AACA;AACA;AACAC,MAAM,CAACC,cAAc,CAACb,aAAa,CAACc,SAAS,EAAE,WAAW,EAAE;EAC1DC,GAAG,EAAE,YAAW;IACd,OAAO,IAAI,CAACJ,OAAO,GAAG,IAAI,CAACD,SAAS;EACtC;AACF,CAAC,CAAC;AAEFM,MAAM,CAACC,OAAO,GAAGjB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}