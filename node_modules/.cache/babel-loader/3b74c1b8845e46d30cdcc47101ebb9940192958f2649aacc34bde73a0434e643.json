{"ast":null,"code":"const combine = function (left, right) {\n  return [left[0], left[1], right[2]];\n};\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n};\nconst getDoc = (reg, view, group) => {\n  if (typeof reg === 'string' || isArray(reg)) {\n    return view.match(reg, group);\n  }\n  if (!reg) {\n    return view.none();\n  }\n  return reg;\n};\nconst addIds = function (ptr, view) {\n  let [n, start, end] = ptr;\n  if (view.document[n] && view.document[n][start]) {\n    ptr[3] = ptr[3] || view.document[n][start].id;\n    if (view.document[n][end - 1]) {\n      ptr[4] = ptr[4] || view.document[n][end - 1].id;\n    }\n  }\n  return ptr;\n};\nconst methods = {};\n// [before], [match], [after]\nmethods.splitOn = function (m, group) {\n  const {\n    splitAll\n  } = this.methods.one.pointer;\n  let splits = getDoc(m, this, group).fullPointer;\n  let all = splitAll(this.fullPointer, splits);\n  let res = [];\n  all.forEach(o => {\n    res.push(o.passthrough);\n    res.push(o.before);\n    res.push(o.match);\n    res.push(o.after);\n  });\n  res = res.filter(p => p);\n  res = res.map(p => addIds(p, this));\n  return this.update(res);\n};\n\n// [before], [match after]\nmethods.splitBefore = function (m, group) {\n  const {\n    splitAll\n  } = this.methods.one.pointer;\n  let splits = getDoc(m, this, group).fullPointer;\n  let all = splitAll(this.fullPointer, splits);\n  let res = [];\n  all.forEach(o => {\n    res.push(o.passthrough);\n    res.push(o.before);\n    if (o.match && o.after) {\n      // console.log(combine(o.match, o.after))\n      res.push(combine(o.match, o.after));\n    } else {\n      res.push(o.match);\n      res.push(o.after);\n    }\n  });\n  res = res.filter(p => p);\n  res = res.map(p => addIds(p, this));\n  return this.update(res);\n};\n\n// [before match], [after]\nmethods.splitAfter = function (m, group) {\n  const {\n    splitAll\n  } = this.methods.one.pointer;\n  let splits = getDoc(m, this, group).fullPointer;\n  let all = splitAll(this.fullPointer, splits);\n  let res = [];\n  all.forEach(o => {\n    res.push(o.passthrough);\n    if (o.before && o.match) {\n      res.push(combine(o.before, o.match));\n    } else {\n      res.push(o.before);\n      res.push(o.match);\n    }\n    res.push(o.after);\n  });\n  res = res.filter(p => p);\n  res = res.map(p => addIds(p, this));\n  return this.update(res);\n};\nmethods.split = methods.splitAfter;\nexport default methods;","map":{"version":3,"names":["combine","left","right","isArray","arr","Object","prototype","toString","call","getDoc","reg","view","group","match","none","addIds","ptr","n","start","end","document","id","methods","splitOn","m","splitAll","one","pointer","splits","fullPointer","all","res","forEach","o","push","passthrough","before","after","filter","p","map","update","splitBefore","splitAfter","split"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/compromise/src/1-one/match/api/split.js"],"sourcesContent":["const combine = function (left, right) {\n  return [left[0], left[1], right[2]]\n}\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nconst getDoc = (reg, view, group) => {\n  if (typeof reg === 'string' || isArray(reg)) {\n    return view.match(reg, group)\n  }\n  if (!reg) {\n    return view.none()\n  }\n  return reg\n}\n\nconst addIds = function (ptr, view) {\n  let [n, start, end] = ptr\n  if (view.document[n] && view.document[n][start]) {\n    ptr[3] = ptr[3] || view.document[n][start].id\n    if (view.document[n][end - 1]) {\n      ptr[4] = ptr[4] || view.document[n][end - 1].id\n    }\n  }\n  return ptr\n}\n\nconst methods = {}\n// [before], [match], [after]\nmethods.splitOn = function (m, group) {\n  const { splitAll } = this.methods.one.pointer\n  let splits = getDoc(m, this, group).fullPointer\n  let all = splitAll(this.fullPointer, splits)\n  let res = []\n  all.forEach(o => {\n    res.push(o.passthrough)\n    res.push(o.before)\n    res.push(o.match)\n    res.push(o.after)\n  })\n  res = res.filter(p => p)\n  res = res.map(p => addIds(p, this))\n  return this.update(res)\n}\n\n// [before], [match after]\nmethods.splitBefore = function (m, group) {\n  const { splitAll } = this.methods.one.pointer\n  let splits = getDoc(m, this, group).fullPointer\n  let all = splitAll(this.fullPointer, splits)\n  let res = []\n  all.forEach(o => {\n    res.push(o.passthrough)\n    res.push(o.before)\n    if (o.match && o.after) {\n      // console.log(combine(o.match, o.after))\n      res.push(combine(o.match, o.after))\n    } else {\n      res.push(o.match)\n      res.push(o.after)\n    }\n  })\n  res = res.filter(p => p)\n  res = res.map(p => addIds(p, this))\n  return this.update(res)\n}\n\n// [before match], [after]\nmethods.splitAfter = function (m, group) {\n  const { splitAll } = this.methods.one.pointer\n  let splits = getDoc(m, this, group).fullPointer\n  let all = splitAll(this.fullPointer, splits)\n  let res = []\n  all.forEach(o => {\n    res.push(o.passthrough)\n    if (o.before && o.match) {\n      res.push(combine(o.before, o.match))\n    } else {\n      res.push(o.before)\n      res.push(o.match)\n    }\n    res.push(o.after)\n  })\n  res = res.filter(p => p)\n  res = res.map(p => addIds(p, this))\n  return this.update(res)\n}\nmethods.split = methods.splitAfter\n\nexport default methods\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}