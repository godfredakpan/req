{"ast":null,"code":"const hasContraction = /'/;\nconst isHas = (terms, i) => {\n  //look for a past-tense verb\n  let after = terms.slice(i + 1, i + 3);\n  return after.some(t => t.tags.has('PastTense'));\n};\n\n// 's -> [possessive, 'has', or 'is']\nconst apostropheS = function (terms, i) {\n  // possessive, is/has\n  let before = terms[i].normal.split(hasContraction)[0];\n  // spencer's got -> 'has'\n  if (isHas(terms, i)) {\n    return [before, 'has'];\n  }\n  // let's\n  if (before === 'let') {\n    return [before, 'us'];\n  }\n  // allow slang \"there's\" -> there are\n  if (before === 'there') {\n    let nextTerm = terms[i + 1];\n    if (nextTerm && nextTerm.tags.has('Plural')) {\n      return [before, 'are'];\n    }\n  }\n  return [before, 'is'];\n};\nexport default apostropheS;","map":{"version":3,"names":["hasContraction","isHas","terms","i","after","slice","some","t","tags","has","apostropheS","before","normal","split","nextTerm"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/compromise/src/2-two/contraction-two/compute/apostrophe-s.js"],"sourcesContent":["const hasContraction = /'/\n\nconst isHas = (terms, i) => {\n  //look for a past-tense verb\n  let after = terms.slice(i + 1, i + 3)\n  return after.some(t => t.tags.has('PastTense'))\n}\n\n// 's -> [possessive, 'has', or 'is']\nconst apostropheS = function (terms, i) {\n  // possessive, is/has\n  let before = terms[i].normal.split(hasContraction)[0]\n  // spencer's got -> 'has'\n  if (isHas(terms, i)) {\n    return [before, 'has']\n  }\n  // let's\n  if (before === 'let') {\n    return [before, 'us']\n  }\n  // allow slang \"there's\" -> there are\n  if (before === 'there') {\n    let nextTerm = terms[i + 1]\n    if (nextTerm && nextTerm.tags.has('Plural')) {\n      return [before, 'are']\n    }\n  }\n  return [before, 'is']\n}\nexport default apostropheS\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,GAAG;AAE1B,MAAMC,KAAK,GAAG,CAACC,KAAK,EAAEC,CAAC,KAAK;EAC1B;EACA,IAAIC,KAAK,GAAGF,KAAK,CAACG,KAAK,CAACF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;EACrC,OAAOC,KAAK,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC;AACjD,CAAC;;AAED;AACA,MAAMC,WAAW,GAAG,UAAUR,KAAK,EAAEC,CAAC,EAAE;EACtC;EACA,IAAIQ,MAAM,GAAGT,KAAK,CAACC,CAAC,CAAC,CAACS,MAAM,CAACC,KAAK,CAACb,cAAc,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,IAAIC,KAAK,CAACC,KAAK,EAAEC,CAAC,CAAC,EAAE;IACnB,OAAO,CAACQ,MAAM,EAAE,KAAK,CAAC;EACxB;EACA;EACA,IAAIA,MAAM,KAAK,KAAK,EAAE;IACpB,OAAO,CAACA,MAAM,EAAE,IAAI,CAAC;EACvB;EACA;EACA,IAAIA,MAAM,KAAK,OAAO,EAAE;IACtB,IAAIG,QAAQ,GAAGZ,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAIW,QAAQ,IAAIA,QAAQ,CAACN,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE;MAC3C,OAAO,CAACE,MAAM,EAAE,KAAK,CAAC;IACxB;EACF;EACA,OAAO,CAACA,MAAM,EAAE,IAAI,CAAC;AACvB,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}