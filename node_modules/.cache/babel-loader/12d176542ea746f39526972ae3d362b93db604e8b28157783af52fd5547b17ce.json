{"ast":null,"code":"import { learn, convert, compress, uncompress, reverse } from '../index.js';\nimport filesize from './filesize.js';\nimport testSide from './classify.js';\nconst green = str => '\\x1b[32m' + str + '\\x1b[0m';\nconst red = str => '\\x1b[31m' + str + '\\x1b[0m';\nconst blue = str => '\\x1b[34m' + str + '\\x1b[0m';\nconst yellow = str => '\\x1b[33m' + str + '\\x1b[0m';\nconst dim = str => '\\x1b[2m' + str + '\\x1b[0m';\nconst testFwd = function (pairs, model) {\n  let wrong = 0;\n  pairs.forEach(a => {\n    let created = convert(a[0], model);\n    if (created !== a[1]) {\n      wrong += 1;\n      console.log(red('error:'), yellow(a[0] + ' →' + created));\n    }\n  });\n  if (wrong === 0) {\n    console.log(green(`  ✓ forward`));\n  } else {\n    console.log(red(` ✗ ${wrong} `) + 'errors\\n');\n  }\n  return wrong;\n};\nconst testBack = function (pairs, model) {\n  let wrong = 0;\n  let rev = reverse(model);\n  pairs.forEach(a => {\n    let created = convert(a[1], rev);\n    if (created !== a[0]) {\n      wrong += 1;\n      console.log(red('  rev ✗: '), yellow(a[1] + ' → ' + created));\n    }\n  });\n  if (wrong === 0) {\n    console.log(green(`  ✓ backward`));\n  } else {\n    console.log(red(`  ✗ ${wrong} `) + 'errors reversed\\n');\n  }\n  return wrong;\n};\nconst testSize = function (pairs, model) {\n  let before = filesize(pairs);\n  let smol = compress(model);\n  let after = filesize(smol);\n  console.log(`  ${dim(before)} -> ${blue(after)}`);\n};\nconst stats = function (model) {\n  let rules = 0;\n  Object.keys(model.rules).forEach(k => rules += model.rules[k].length);\n  let rev = 0;\n  Object.keys(model.rev || {}).forEach(k => rev += model.rev[k].length);\n  let exc = Object.keys(model.exceptions).length;\n  console.log(`  ${blue(rules.toLocaleString())} rules,  ${yellow(rev.toLocaleString())} reversed,  ${blue(exc.toLocaleString())} exceptions`);\n};\nconst test = function (pairs, opts) {\n  console.log('\\n');\n  console.log(yellow(pairs.length.toLocaleString()) + ` pairs -  ${dim(filesize(pairs))}`);\n  let begin = new Date();\n  let model = learn(pairs, opts);\n  let end = new Date();\n  console.log('   ', (end.getTime() - begin.getTime()) / 1000, 'seconds');\n  console.log(yellow('\\nSize:'));\n  stats(model);\n  testSize(pairs, model);\n  model = compress(model);\n  model = uncompress(model);\n  console.log(yellow('\\nForward:'));\n  testFwd(pairs, model);\n  console.log(yellow('\\nBackward:'));\n  testBack(pairs, model);\n  // hmm\n  // console.log(yellow('\\nClassify:'))\n  // testSide(pairs, model, 'Left')\n  // testSide(pairs, model, 'Right')\n};\n\nexport default test;","map":{"version":3,"names":["learn","convert","compress","uncompress","reverse","filesize","testSide","green","str","red","blue","yellow","dim","testFwd","pairs","model","wrong","forEach","a","created","console","log","testBack","rev","testSize","before","smol","after","stats","rules","Object","keys","k","length","exc","exceptions","toLocaleString","test","opts","begin","Date","end","getTime"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/suffix-thumb/src/test/index.js"],"sourcesContent":["import { learn, convert, compress, uncompress, reverse } from '../index.js'\nimport filesize from './filesize.js'\nimport testSide from './classify.js'\n\nconst green = str => '\\x1b[32m' + str + '\\x1b[0m'\nconst red = str => '\\x1b[31m' + str + '\\x1b[0m'\nconst blue = str => '\\x1b[34m' + str + '\\x1b[0m'\nconst yellow = str => '\\x1b[33m' + str + '\\x1b[0m'\nconst dim = str => '\\x1b[2m' + str + '\\x1b[0m'\n\nconst testFwd = function (pairs, model) {\n  let wrong = 0\n  pairs.forEach((a) => {\n    let created = convert(a[0], model)\n    if (created !== a[1]) {\n      wrong += 1\n      console.log(red('error:'), yellow(a[0] + ' →' + created))\n    }\n  })\n  if (wrong === 0) {\n    console.log(green(`  ✓ forward`))\n  } else {\n    console.log(red(` ✗ ${wrong} `) + 'errors\\n')\n  }\n  return wrong\n}\n\nconst testBack = function (pairs, model) {\n  let wrong = 0\n  let rev = reverse(model)\n  pairs.forEach((a) => {\n    let created = convert(a[1], rev)\n    if (created !== a[0]) {\n      wrong += 1\n      console.log(red('  rev ✗: '), yellow(a[1] + ' → ' + created))\n    }\n  })\n  if (wrong === 0) {\n    console.log(green(`  ✓ backward`))\n  } else {\n    console.log(red(`  ✗ ${wrong} `) + 'errors reversed\\n')\n  }\n  return wrong\n}\n\nconst testSize = function (pairs, model) {\n  let before = filesize(pairs)\n  let smol = compress(model)\n  let after = filesize(smol)\n  console.log(`  ${dim(before)} -> ${blue(after)}`)\n}\n\nconst stats = function (model) {\n  let rules = 0\n  Object.keys(model.rules).forEach(k => rules += model.rules[k].length)\n  let rev = 0\n  Object.keys(model.rev || {}).forEach(k => rev += model.rev[k].length)\n  let exc = Object.keys(model.exceptions).length\n  console.log(`  ${blue(rules.toLocaleString())} rules,  ${yellow(rev.toLocaleString())} reversed,  ${blue(exc.toLocaleString())} exceptions`)\n}\n\nconst test = function (pairs, opts) {\n  console.log('\\n')\n  console.log(yellow(pairs.length.toLocaleString()) + ` pairs -  ${dim(filesize(pairs))}`)\n  let begin = new Date()\n  let model = learn(pairs, opts)\n  let end = new Date()\n  console.log('   ', (end.getTime() - begin.getTime()) / 1000, 'seconds')\n\n  console.log(yellow('\\nSize:'))\n  stats(model)\n  testSize(pairs, model)\n\n  model = compress(model)\n  model = uncompress(model)\n\n  console.log(yellow('\\nForward:'))\n  testFwd(pairs, model)\n  console.log(yellow('\\nBackward:'))\n  testBack(pairs, model)\n  // hmm\n  // console.log(yellow('\\nClassify:'))\n  // testSide(pairs, model, 'Left')\n  // testSide(pairs, model, 'Right')\n\n}\nexport default test"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}