{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = useForceUpdate;\nvar _react = require(\"react\");\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nfunction useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = (0, _react.useReducer)(function (state) {\n      return !state;\n    }, false),\n    dispatch = _useReducer[1];\n  return dispatch;\n}","map":{"version":3,"names":["exports","__esModule","default","useForceUpdate","_react","require","_useReducer","useReducer","state","dispatch"],"sources":["/Users/godfredakpan/Documents/projects/AgentReg/node_modules/@restart/hooks/cjs/useForceUpdate.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = useForceUpdate;\n\nvar _react = require(\"react\");\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nfunction useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = (0, _react.useReducer)(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,cAAc;AAEhC,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,cAAc,GAAG;EACxB;EACA;EACA,IAAIG,WAAW,GAAG,CAAC,CAAC,EAAEF,MAAM,CAACG,UAAU,EAAE,UAAUC,KAAK,EAAE;MACxD,OAAO,CAACA,KAAK;IACf,CAAC,EAAE,KAAK,CAAC;IACLC,QAAQ,GAAGH,WAAW,CAAC,CAAC,CAAC;EAE7B,OAAOG,QAAQ;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}