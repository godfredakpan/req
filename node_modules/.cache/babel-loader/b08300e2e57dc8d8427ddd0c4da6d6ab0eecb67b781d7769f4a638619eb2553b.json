{"ast":null,"code":"var _jsxFileName = \"/Users/godfredakpan/Documents/projects/AgentReg/src/components/all_users.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  dataField: 'id',\n  text: 'ID'\n}, {\n  dataField: 'name',\n  text: 'Name'\n}, {\n  dataField: 'email',\n  text: 'Email'\n}];\nconst data = [{\n  id: 1,\n  name: 'John Doe',\n  email: 'john.doe@example.com'\n}, {\n  id: 2,\n  name: 'Jane Smith',\n  email: 'jane.smith@example.com'\n}, {\n  id: 3,\n  name: 'Bob Johnson',\n  email: 'bob.johnson@example.com'\n}];\nconst options = {\n  sizePerPage: 10,\n  hideSizePerPage: true,\n  hidePageListOnlyOnePage: true\n};\nfunction Users() {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const handleSelect = (row, isSelected) => {\n    if (isSelected) {\n      setSelectedRows([...selectedRows, row]);\n    } else {\n      setSelectedRows(selectedRows.filter(r => r.id !== row.id));\n    }\n  };\n  const handleExportClick = () => {\n    const selectedData = selectedRows.length > 0 ? selectedRows : data;\n    const sheetData = [['ID', 'Name', 'Email'], ...selectedData.map(d => [d.id, d.name, d.email])];\n    const sheetName = 'Table Data';\n    const workbook = XLSX.utils.book_new();\n    const worksheet = XLSX.utils.aoa_to_sheet(sheetData);\n    XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    saveAs(new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    }), `${sheetName}.xlsx`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Table Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          keyField: \"id\",\n          data: data,\n          columns: columns,\n          selectRow: {\n            mode: 'checkbox',\n            onSelect: handleSelect\n          },\n          pagination: paginationFactory(options),\n          wrapperClasses: \"table-responsive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleExportClick,\n          children: \"Export to Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Users, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","BootstrapTable","paginationFactory","Button","saveAs","XLSX","columns","dataField","text","data","id","name","email","options","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","Users","selectedRows","setSelectedRows","handleSelect","row","isSelected","filter","r","handleExportClick","selectedData","length","sheetData","map","d","sheetName","workbook","utils","book_new","worksheet","aoa_to_sheet","book_append_sheet","excelBuffer","write","bookType","type","Blob","mode","onSelect"],"sources":["/Users/godfredakpan/Documents/projects/AgentReg/src/components/all_users.js"],"sourcesContent":["import React, { useState } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst columns = [\n  {\n    dataField: 'id',\n    text: 'ID',\n  },\n  {\n    dataField: 'name',\n    text: 'Name',\n  },\n  {\n    dataField: 'email',\n    text: 'Email',\n  },\n];\n\nconst data = [\n  {\n    id: 1,\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n  },\n  {\n    id: 2,\n    name: 'Jane Smith',\n    email: 'jane.smith@example.com',\n  },\n  {\n    id: 3,\n    name: 'Bob Johnson',\n    email: 'bob.johnson@example.com',\n  },\n];\n\nconst options = {\n  sizePerPage: 10,\n  hideSizePerPage: true,\n  hidePageListOnlyOnePage: true,\n};\n\nfunction Users() {\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const handleSelect = (row, isSelected) => {\n    if (isSelected) {\n      setSelectedRows([...selectedRows, row]);\n    } else {\n      setSelectedRows(selectedRows.filter((r) => r.id !== row.id));\n    }\n  };\n\n  const handleExportClick = () => {\n    const selectedData = selectedRows.length > 0 ? selectedRows : data;\n\n    const sheetData = [\n      ['ID', 'Name', 'Email'],\n      ...selectedData.map((d) => [d.id, d.name, d.email]),\n    ];\n\n    const sheetName = 'Table Data';\n\n    const workbook = XLSX.utils.book_new();\n    const worksheet = XLSX.utils.aoa_to_sheet(sheetData);\n\n    XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);\n\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array',\n    });\n\n    saveAs(\n      new Blob([excelBuffer], { type: 'application/octet-stream' }),\n      `${sheetName}.xlsx`\n    );\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h2>Table Data</h2>\n          <BootstrapTable\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            selectRow={{ mode: 'checkbox', onSelect: handleSelect }}\n            pagination={paginationFactory(options)}\n            wrapperClasses=\"table-responsive\"\n          />\n          <Button onClick={handleExportClick}>Export to Excel</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Users;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}