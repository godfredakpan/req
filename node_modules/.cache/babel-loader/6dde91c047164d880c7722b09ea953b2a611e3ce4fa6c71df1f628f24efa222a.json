{"ast":null,"code":"const hasContraction = /'/;\n\n//look for a past-tense verb\nconst pickHad = (terms, i) => {\n  // you'd better go -> 'you had better go'\n  if (terms[i + 1] && terms[i + 1].normal == 'better') {\n    return true;\n  }\n  let after = terms.slice(i + 1, i + 3);\n  return after.some(t => t.tags.has('PastTense'));\n};\n\n// he'd walked -> had\n// how'd -> did\n// he'd go -> would\nconst _apostropheD = function (terms, i) {\n  let before = terms[i].normal.split(hasContraction)[0];\n  // what'd, how'd\n  if (before === 'how' || before === 'what') {\n    return [before, 'did'];\n  }\n  if (pickHad(terms, i) === true) {\n    return [before, 'had'];\n  }\n  // had/would/did\n  return [before, 'would'];\n};\nexport default _apostropheD;","map":{"version":3,"names":["hasContraction","pickHad","terms","i","normal","after","slice","some","t","tags","has","_apostropheD","before","split"],"sources":["/Users/godfredakpan/Documents/signature_generator/signature_generator/node_modules/compromise/src/2-two/contraction-two/compute/apostrophe-d.js"],"sourcesContent":["const hasContraction = /'/\n\n//look for a past-tense verb\nconst pickHad = (terms, i) => {\n  // you'd better go -> 'you had better go'\n  if (terms[i + 1] && terms[i + 1].normal == 'better') {\n    return true\n  }\n  let after = terms.slice(i + 1, i + 3)\n  return after.some(t => t.tags.has('PastTense'))\n}\n\n// he'd walked -> had\n// how'd -> did\n// he'd go -> would\nconst _apostropheD = function (terms, i) {\n  let before = terms[i].normal.split(hasContraction)[0]\n  // what'd, how'd\n  if (before === 'how' || before === 'what') {\n    return [before, 'did']\n  }\n  if (pickHad(terms, i) === true) {\n    return [before, 'had']\n  }\n  // had/would/did\n  return [before, 'would']\n}\nexport default _apostropheD\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,GAAG;;AAE1B;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,CAAC,KAAK;EAC5B;EACA,IAAID,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC,IAAID,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC,CAACC,MAAM,IAAI,QAAQ,EAAE;IACnD,OAAO,IAAI;EACb;EACA,IAAIC,KAAK,GAAGH,KAAK,CAACI,KAAK,CAACH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;EACrC,OAAOE,KAAK,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC;AACjD,CAAC;;AAED;AACA;AACA;AACA,MAAMC,YAAY,GAAG,UAAUT,KAAK,EAAEC,CAAC,EAAE;EACvC,IAAIS,MAAM,GAAGV,KAAK,CAACC,CAAC,CAAC,CAACC,MAAM,CAACS,KAAK,CAACb,cAAc,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,IAAIY,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,MAAM,EAAE;IACzC,OAAO,CAACA,MAAM,EAAE,KAAK,CAAC;EACxB;EACA,IAAIX,OAAO,CAACC,KAAK,EAAEC,CAAC,CAAC,KAAK,IAAI,EAAE;IAC9B,OAAO,CAACS,MAAM,EAAE,KAAK,CAAC;EACxB;EACA;EACA,OAAO,CAACA,MAAM,EAAE,OAAO,CAAC;AAC1B,CAAC;AACD,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}